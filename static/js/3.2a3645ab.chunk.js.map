{"version":3,"sources":["components/Content/Content.module.css","components/Content/MyPosts/MyPosts.module.css","components/Content/MyPosts/Post/Post.module.css","components/Content/UsersProfile/UsersProfile.module.css","components/Content/MyPosts/Post/Post.js","components/Content/MyPosts/MyPosts.js","components/Content/MyPosts/MyPostsContainer.js","components/Content/Status/Status.js","components/Content/UsersProfile/UsersForm.js","components/Content/UsersProfile/UsersProfile.js","components/Content/Content.js","components/Content/ContentContainer.js"],"names":["module","exports","Post","props","className","classes","alt","img","src","span1","message","likes","MyPosts","React","memo","posts","map","el","key","id","console","log","MyPostsReduxForm","onSubmit","text","addPost","textarea","maxLength10","maxLength","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","contentPage","PostsData","textForArea","dispatch","addPostsActionCreator","Status","isFocus","value","status","this","setState","setStatus","event","target","prevProps","prevState","onDoubleClick","active","bind","onChange","changeStatus","onBlur","unActive","autoFocus","Component","UsersForm","dataForm","editProfileThunkCreator","then","cancelEditMode","UsersReduxForm","initialValues","UsersFormForEditMode","error","c","errorSpan","Input","type","Object","keys","contacts","i","Contacts","contactKey","contactValue","contactsInfo","UsersProfile","useState","editMode","setEditMode","avaImg","currentProfile","photos","large","e","files","length","loadPhoto","editProfile","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Content","content","Preloader","ContentContainer","userId","match","params","myId","history","push","getProfile","getStatus","refresh","compose","isAuth","auth","getProfileThunkCreator","getStatusThunkCreator","setStatusThunkCreator","profile","photo","loadPhotoThunkCreator","withRouter"],"mappings":"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","file":"static/js/3.2a3645ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__3FZEj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MyPosts_button__26q9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__1IdeX\",\"span1\":\"Post_span1__d2_78\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaImg\":\"UsersProfile_avaImg__1OMy4\",\"contactsInfo\":\"UsersProfile_contactsInfo__1C3Zm\"};","import React from 'react';\nimport classes from './Post.module.css';\n\nfunction Post(props){\n    return (\n        <div className={classes}>\n            <img alt='' className={classes.img} src='https://i.pinimg.com/originals/7c/c7/a6/7cc7a630624d20f7797cb4c8e93c09c1.png' />\n            <span className={classes.span1}>{props.message}</span>\n            <p>Likes {props.likes}</p>\n        </div>\n    )\n}\n\nexport default Post\n","import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLength } from '../../../utilits/validators/validators';\nimport { Textarea } from '../../common/formsControl/FormsControl';\n\n\nconst MyPosts = React.memo((props) => {\n    const posts = props.posts.map(el => <Post key={el.id} message={el.message} likes={el.likes} />);\n\n    const onSubmit = (text) => {\n        props.addPost(text.textarea)\n    }\n    console.log('RENDER')\n\n    return (\n        \n        <div>\n            <h3>My Posts</h3>\n            <MyPostsReduxForm onSubmit={onSubmit} />\n            {posts} \n        </div>\n    )\n})\n\nlet maxLength10 = maxLength(10);\n\n\nconst MyPostsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Textarea} name='textarea' placeholder='Say hello :)' validate={[required, maxLength10]} />\n            <br />\n            <button>Add Posts</button>\n        </form>\n    )\n}\n\nlet MyPostsReduxForm = reduxForm({ form: 'profileForm' })(MyPostsForm)\n\nexport default MyPosts;\n","import { addPostsActionCreator, updateTextActionCreator } from '../../../redux/content-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux'\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        posts: state.contentPage.PostsData,\n        text: state.contentPage.textForArea\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost(text){\n            dispatch(addPostsActionCreator(text));\n        },\n\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n","import React, { Component } from 'react'\n\nclass Status extends Component {\n  \n    state = {\n        isFocus: false,\n        value: this.props.status\n    }\n\n\n    active() {\n        this.setState({\n            isFocus: true\n        })\n    };\n\n    unActive() {\n        this.setState({\n            isFocus: false\n        })\n        this.props.setStatus(this.state.value)\n    }\n\n    changeStatus(event){\n        this.setState({\n            value: event.target.value\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState){\n       if(prevProps.status !== this.props.status){\n           this.setState({\n               value: this.props.status\n           })\n       }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div>\n                    {!this.state.isFocus &&\n                        <span onDoubleClick={this.active.bind(this)}>{this.props.status || 'No status'}</span>\n                    }\n                </div>\n                <div>\n                    {this.state.isFocus &&\n                        <input onChange={this.changeStatus.bind(this)} onBlur={this.unActive.bind(this)} autoFocus={true} value={this.state.value} />}\n                </div>\n            </div >\n        )\n    }\n\n\n\n}\n\nexport default Status\n","import React, { Component } from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { Input, Textarea } from '../../common/formsControl/FormsControl'\nimport { required } from '../../../utilits/validators/validators'\nimport c from './../../../components/common/formsControl/FormsControl.module.css'\nimport { editProfileThunkCreator } from '../../../redux/content-reducer';\n\n\nexport default class UsersForm extends Component {\n\n    onSubmit(dataForm) {\n        editProfileThunkCreator(dataForm)\n    //    this.props.editProfile(dataForm)\n            .then(() => this.props.cancelEditMode())\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>EDIT MODE</h3>\n                <UsersReduxForm initialValues={this.props.initialValues} onSubmit={this.onSubmit.bind(this)} />\n            </div>\n        )\n    }\n}\n\nclass UsersFormForEditMode extends Component {\n\n    render() {\n        return (\n            <form onSubmit={this.props.handleSubmit}>\n                <button>Save</button>\n                {this.props.error && <div>\n                    <span className={c.errorSpan}>{this.props.error}</span>\n                </div>}\n                <Field placeholder='full name' name='fullName' component={Input} validate={[required]} />\n                <Field placeholder='about me' name='aboutMe' component={Textarea} validate={[required]} />\n                <Field placeholder='looking for a job' name='lookingForAJob' type='checkbox' component={Input} validate={[required]} />\n                <Field placeholder='job Description' name='lookingForAJobDescription' component={Textarea} validate={[required]} />\n                <div>\n                    {Object.keys(this.props.initialValues.contacts).map(i => {\n                        return <div key={i}><b>{i}</b><Field placeholder={i} name={`contacts.${i}`} component={Input} /></div>\n                    })}\n                </div>\n\n\n\n            </form>\n        )\n    }\n}\n\nconst UsersReduxForm = reduxForm({ form: 'editMode' })(UsersFormForEditMode);\n\n","import React, { useState } from 'react'\nimport classes from './UsersProfile.module.css'\nimport Status from '../Status/Status'\nimport UsersForm from './UsersForm'\n\n\n\nlet UsersProfile = (props) => {\n    let [editMode, setEditMode] = useState(false)\n\n    const enterToEditMode = () => {\n        setEditMode(true);\n    }\n\n    const cancelEditMode = () => {\n        setEditMode(false);\n    }\n\n    const choosePhoto = (e) => {\n        if (e.target.files.length > 0) {\n            props.loadPhoto(e.target.files[0])\n        }\n    }\n    return (\n        <div>\n            <img className={classes.avaImg} src={props.currentProfile.photos.large || 'https://mdbootstrap.com/img/Photos/Avatars/img%20(3).jpg'} />\n            {!props.id ? <input onChange={choosePhoto} type='file' /> : null}\n            {!editMode ? <div>\n                {!props.id ? <div><button onClick={enterToEditMode}>Edit mode</button></div> : null}\n                <b>Full Name</b><span>{props.currentProfile.fullName}</span><br />\n                <b>Status: </b><Status id={props.id} setStatus={props.setStatus} status={props.status} />\n                <b>About me: </b><span>{props.currentProfile.aboutMe}</span><br />\n                <b>Looking for a job: </b><span>{props.currentProfile.lookingForAJob ? 'yes' : 'no'}</span><br />\n                {props.currentProfile.lookingForAJob && <><b>Job description: </b> <span>{props.currentProfile.lookingForAJobDescription}</span> <br /></>}\n                <div>\n                    <b>Contacts:</b>\n                    {Object.keys(props.currentProfile.contacts).map(i => {\n                        return <Contacts key={i} contactKey={i} contactValue={props.currentProfile.contacts[i]} />\n                    })}\n                </div>\n            </div> : <UsersForm editProfile={props.editProfile} currentProfile={props.currentProfile} initialValues={props.currentProfile} />}\n        </div>\n    )\n}\n\n\n\nconst Contacts = ({ contactKey, contactValue }) => {\n    return <div className={classes.contactsInfo}><b>{contactKey}</b><span>{`${contactValue}`}</span></div>\n}\n\nexport default UsersProfile","import React from 'react';\nimport classes from './Content.module.css';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport UsersProfile from './UsersProfile/UsersProfile';\nimport Preloader from '../Preloader/Preloader';\n\n\n\nfunction Content(props){\n    if(!props.currentProfile){\n        return <Preloader />\n    }\n\n    return (\n        <div className={classes.content}>\n            <UsersProfile loadPhoto={props.loadPhoto} editProfile={props.editProfile} currentProfile={props.currentProfile} id={props.id} setStatus={props.setStatus} status={props.status} />     \n            <MyPostsContainer />\n        </div>\n    )\n}\n\n\nexport default Content;\n","import Content from './Content'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { getProfileThunkCreator, getStatusThunkCreator, setStatusThunkCreator, editProfileThunkCreator, loadPhotoThunkCreator } from '../../redux/content-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ContentContainer extends Component {\n\n    refresh() {\n        let userId = this.props.match.params.userId || this.props.myId || (this.props.history.push('/login'))\n        this.props.getProfile(userId);\n        this.props.getStatus(userId);\n\n    }\n\n    componentDidMount() {\n        this.refresh();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refresh();\n        }\n    }\n    \n\n    render() {\n\n        return (\n            <div>\n                <Content loadPhoto={this.props.loadPhoto} editProfile={this.props.editProfile} {...this.props} id={this.props.match.params.userId} currentProfile={this.props.currentProfile} status={this.props.status} setStatus={this.props.setStatus} />\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n\n    return {\n\n        currentProfile: state.contentPage.currentProfile,\n        status: state.contentPage.status,\n        isAuth: state.auth.isAuth,\n        myId: state.auth.userId\n\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        getProfile(userId) {\n            dispatch(getProfileThunkCreator(userId))\n        },\n        getStatus(id) {\n            dispatch(getStatusThunkCreator(id))\n        },\n        setStatus(status) {\n            dispatch(setStatusThunkCreator(status))\n        },\n\n        editProfile(profile) {\n            dispatch(editProfileThunkCreator(profile));\n        },\n\n        loadPhoto(photo){\n            dispatch(loadPhotoThunkCreator(photo));\n        }\n\n    }\n}\n\n\n\n// let AuthRedirectComponent = withAuthRedirect(ContentContainer);\n\n// let withURLRouterContentContainer = withRouter(AuthRedirectComponent)\n// export default connect(mapStateToProps, mapDispatchToProps)(withURLRouterContentContainer)\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRouter)(ContentContainer)"],"sourceRoot":""}